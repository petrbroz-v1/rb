Use Case 1 – Saving a New Document (REQ_01)

Prerequisites:
    - User has access to the API.
    - The service is available.
    - User has permission to save the document.
    - The repository name is mainRepository.

Steps:
1. User sends a POST request to the endpoint: /api/mainRepository/documents
2. The request is of type multipart/form-data and contains:
        - one binary file in the field files
        - a metadata field in JSON format, containing:
            - documentType: "contract"
            - attributes: an object with required attribute values according to the document type
3. The system processes the request and saves the document.
4. The system returns a response with a DocumentReference object containing:
        - uniqueId: "e58ed763-928c-4155-bee9-fdbaaadc15f3"
        - version: "1.0"

Expected result:
    - The document is successfully saved  - resp. HTTP 201.
    - The response includes uniqueId and version.
    - The operation completes without error.

###################################################################
Use Case 2 – Finding a Document by ID (REQ_05)

Prerequisites:
    - A document with uniqueId = e58ed763-928c-4155-bee9-fdbaaadc15f3 exists.
    - User has permission to view it.
    - The repository name is mainRepository.

Steps:
1. User sends a GET request to the endpoint: /api/mainRepository/documents/document?uniqueId=e58ed763-928c-4155-bee9-fdbaaadc15f3
2. The system searches for the document based on the uniqueId value.
3. The system returns a response containing:
    - the document metadata
    - the binary content of the document
    - the document version

Expected result:
  - The document is successfully found  - resp. HTTP 200.
  - The returned response contains metadata, version, and document content.
  - The operation completes without error.